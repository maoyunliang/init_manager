<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC ".//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yitai.mapper.DepartmentMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="department.id">
        INSERT INTO department_* (id, department_name, depart_no, remark, sort_no,
                                  status, pid, leader, username, create_user, update_user,
                                  create_time, update_time, is_del)
        VALUES(#{department.id}, #{department.departmentName}, #{department.departNo}, #{department.remark},
            #{department.sortNo}, #{department.status}, #{department.pid}, #{department.leader}, #{department.username},
            #{department.createUser}, #{department.updateUser},#{department.createTime},
            #{department.updateTime}, #{department.isDel});
    </insert>
    <update id="update">
        update department_*
        <set>
            <if test="department.departmentName != null">department_name = #{department.departmentName},</if>
            <if test="department.departNo != null">depart_no = #{department.departNo},</if>
            <if test="department.remark != null">remark = #{department.remark},</if>
            <if test="department.pid != null">pid = #{department.pid},</if>
            <if test="department.leader != null">leader = #{department.leader},</if>
            <if test="department.username != null">username = #{department.username},</if>
            <if test="department.sortNo != null">sort_no = #{department.sortNo},</if>
            <if test="department.status != null">status = #{department.status},</if>
            <if test="department.updateTime != null">update_time = #{department.updateTime},</if>
            <if test="department.updateUser != null">update_user = #{department.updateUser},</if>
        </set>
        where id = #{department.id}
    </update>
    <update id="deleteById">
        update department_*
        set is_del = 1
        <where>
            id = #{id}
        </where>
    </update>
    <select id="list" resultType="com.yitai.admin.vo.DepartmentVO">
        select *
        from department_* d
        <where>
            <if test="departmentName != null and departmentName != ''">
                and department_name like concat('%', #{departmentName}, '%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            and is_del = 0
        </where>
        order by create_time desc
    </select>
    <select id="getDeptUser" resultType="com.yitai.admin.dto.department.DepartmentUserDTO">
        select dept_id as deptId, pu.id, username, pu.phone
        from user_department_* ud
        join public_user pu on ud.user_id = pu.id
        and pu.is_del = 0
    </select>

    <select id="containChildren" resultType="com.yitai.admin.entity.Department">
        select *
        from department_*
        where pid =  #{id}
          and is_del = 0
    </select>
    <select id="containsUser" resultType="com.yitai.admin.vo.UserVO">
        select pu.id, username, pu.phone
        from public_user pu
                 join user_department_* d on d.user_id = pu.id
        where d.dept_id = #{id}
          and pu.is_del = 0
    </select>
    <insert id="insertScope">
        insert into role_department_*(id, role_id, dept_id, create_user, update_user,
                                      create_time, update_time, is_del)
        VALUES (id,#{roleDepartment.roleId}, #{roleDepartment.deptId},
            #{roleDepartment.createUser}, #{roleDepartment.updateUser},
            #{roleDepartment.createTime}, #{roleDepartment.updateTime}, #{roleDepartment.isDel})
    </insert>
    <select id="selectSysRole" resultType="com.yitai.admin.entity.Role">
        select id, role_name, identity, role_type, role_desc, status, create_user, update_user, create_time, update_time, is_del
        from role_*
        where role_type = '00'
    </select>
    <select id="selectSysUser" resultType="com.yitai.admin.entity.User">
        select pu.*
        from public_user pu join user_role_* ur on pu.id = ur.user_id
        where ur.role_id = #{roleId}
    </select>
</mapper>