<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC ".//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yitai.mapper.RoleMapper">
    <insert id="assMenu">
        insert into role_menu_*(id, role_id, menu_id, create_time,
        update_time, create_user, update_user, is_del)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.id},#{item.roleId},#{item.menuId},#{item.createTime},
            #{item.updateTime}, #{item.createUser}, #{item.updateUser}, #{item.isDel})
        </foreach>
    </insert>
    <insert id="assUser">
        insert into user_role_*(id, user_id, role_id, create_user, update_user, create_time, update_time, is_del)
        VALUES
            <foreach collection="list" separator="," item="item">
                (#{item.id},#{item.userId},#{item.roleId}, #{item.createUser}, #{item.updateUser},
                 #{item.createTime}, #{item.updateTime},  #{item.isDel})
            </foreach>
    </insert>
    <insert id="assDept">
        insert into role_department_*(id, role_id, dept_id, create_user, update_user, create_time, update_time, is_del)
        VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.id},#{item.roleId},#{item.deptId},#{item.createUser}, #{item.updateUser},
            #{item.createTime}, #{item.updateTime},#{item.isDel})
        </foreach>
    </insert>
    <insert id="save" useGeneratedKeys="true" keyProperty="role.id">
        insert into role_*(id, role_name, role_type, identity, role_desc,
                           status, create_time, update_time, create_user,
                           update_user, is_del)
        values (#{role.id}, #{role.roleName}, #{role.roleType}, #{role.identity},
                           #{role.roleDesc}, #{role.status}, #{role.createTime}, #{role.updateTime},
                           #{role.createUser}, #{role.updateUser}, #{role.isDel})
    </insert>
    <update id="update" parameterType="com.yitai.admin.entity.Role">
        update role_*
        <set>
            <if test="role.roleName != null">role_name = #{role.roleName},</if>
            <if test="role.roleType != null">role_type = #{role.roleType},</if>
            <if test="role.identity != null">identity = #{role.identity},</if>
            <if test="role.roleDesc != null">role_desc = #{role.roleDesc},</if>
            <if test="role.status != null">status = #{role.status},</if>
            <if test="role.updateTime != null">update_time = #{role.updateTime},</if>
            <if test="role.updateUser != null">update_user = #{role.updateUser},</if>
        </set>
        where id = #{role.id}
    </update>
    <delete id="emptyMenu">
        delete from role_menu_*
        where role_id = #{roleId}
    </delete>
    <delete id="emptyUser">
        delete from user_role_*
        where role_id = #{roleId}
    </delete>
    <delete id="emptyDept">
        delete from role_department_*
        where role_id = #{roleId}
    </delete>
    <select id="pageQuery" resultType="com.yitai.admin.entity.Role">
        select r.id, r.role_name, r.identity, r.role_type, r.role_desc,
        r.status, r.create_user, r.update_user, r.create_time, r.update_time,
        r.is_del
        from role_* r
        left join role_department_* rd on rd.role_id = r.id
        <where>
            <if test="roleName != null and roleName != ''">
                and role_name like concat('%', #{roleName}, '%')
            </if>
            <if test="identity != null and identity != ''">
                and identity like concat('%', #{identity}, '%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
                and r.is_del = 0
        </where>
        group by r.id, r.create_time
        order by r.create_time desc
    </select>
    <update id="deleteMenuById">
        update role_menu_*
        <set>
           is_del = 1
        </set>
        where role_id = #{roleId}
    </update>

    <update id="deleteById">
        update role_*
        <set>
            is_del = 1
        </set>
        where id = #{roleId}
    </update>

    <select id="getRoleById" resultType="com.yitai.admin.entity.Role">
        select *
        from role_*
        where id = #{roleId}
            and is_del = 0
    </select>
    <select id="listMenu" resultType="com.yitai.admin.vo.MenuVO">
        select * from public_menu
        where is_del = 0
    </select>
    <select id="list" resultType="com.yitai.admin.vo.UserVO">
        select * from public_user pu join public_user_tenant put on pu.id = put.user_id
        where pu.is_del = 0
    </select>

    <select id="selectByRoleId" resultType="com.yitai.admin.vo.MenuVO">
        select pm.id, menu_name, menu_path, menu_router, identify, menu_type, menu_pid,
               icon, sort_no, status, visible, pm.create_user, pm.update_user,
               pm.create_time, pm.update_time, pm.is_del
        from role_menu_* rm1
                 join public_menu pm on rm1.menu_id = pm.id
        where role_id = #{roleId} and rm1.is_del = 0
    </select>

    <select id="selectUserByRoleId" resultType="com.yitai.admin.vo.UserVO">
        select pu.id, pu.openid, pu.username, pu.realname, pu.sex, pu.phone,
               pu.email, pu.id_number, pu.status, pu.avatar
        from user_role_* us1
                 join public_user pu on us1.user_id = pu.id
        where role_id = #{roleId} and us1.is_del = 0
    </select>

    <select id="selectDeptByRoleId" resultType="com.yitai.admin.vo.DepartmentVO">
        select d.id, d.department_name, d.depart_no, d.remark, d.sort_no, d.status,
               d.pid, d.leader, d.username, d.create_user, d.update_user,
               d.create_time, d.update_time, d.is_del
        from role_department_* rd
        left join department_* d on d.id = rd.dept_id
        where rd.role_id = #{roleId} and rd.is_del = 0 and d.is_del = 0
    </select>
    <select id="listDepartment" resultType="com.yitai.admin.vo.DepartmentVO">
            select d.id, d.department_name, d.depart_no, d.remark, d.sort_no, d.status,
                   d.pid, d.leader, d.username, d.create_user, d.update_user,
                   d.create_time, d.update_time, d.is_del
            from department_* d
            where d.is_del = 0
    </select>
</mapper>