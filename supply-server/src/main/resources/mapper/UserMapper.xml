<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC ".//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yitai.mapper.UserMapper">
    <insert id="assRole">
        insert into user_role_*(id, user_id, role_id, create_time,
                                                              update_time, create_user, update_user, is_del)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.id},#{item.userId},#{item.roleId},#{item.createTime},
             #{item.updateTime}, #{item.createUser}, #{item.updateUser}, #{item.isDel})
        </foreach>
    </insert>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into public_user(id, username, openid, realname, password, phone, email, sex,
                               id_number, status, avatar, create_time, update_time, create_user, update_user, is_del)
        values (#{id}, #{username},#{openid}, #{realname}, #{password}, #{phone}, #{email}, #{sex},
                #{idNumber}, #{status}, #{avatar}, #{createTime}, #{updateTime}, #{createUser},
                #{updateUser}, #{isDel})

    </insert>
    <insert id="insertUserTenant">
        insert into public_user_tenant(id, user_id, tenant_id, create_time, update_time, create_user, update_user, is_del)
        values (#{id}, #{userId}, #{tenantId}, #{createTime}, #{updateTime}, #{createUser},
                #{updateUser}, #{isDel})
    </insert>

    <update id="update" parameterType="User">
        update public_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="realname != null">realname = #{realname},</if>
            <if test="password != null">password = #{password},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="idNumber != null">id_number = #{idNumber},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="status != null">status = #{status}</if>
        </set>
        where id = #{id}
    </update>
    <resultMap id="pageQueryResultMap" type="com.yitai.vo.UserVO">
        <id property="id" column="pu.id"/>
        <result property="username" column="pu.username"/>
        <result property="realname" column="pu.realname"/>
        <result property="sex" column="pu.sex"/>
        <result property="openid" column="pu.openid"/>
        <result property="phone" column="pu.phone"/>
        <result property="email" column="pu.email"/>
        <result property="idNumber" column="pu.id_number"/>
        <result property="status" column="pu.status"/>
        <result property="avatar" column="avatar"/>
        <result property="departments" column="departments" typeHandler="com.yitai.handler.StringToListTypeHandler" />
    </resultMap>
    <select id="pageQuery" resultMap="pageQueryResultMap">
        select pu.id, pu.username, pu.realname, pu.sex, pu.openid, pu.phone, pu.email,
               pu.id_number, pu.status, avatar, GROUP_CONCAT(d.department_name order by ud.dept_id) as departments
        from public_user pu
        join public_user_tenant put on pu.id = put.user_id
        join user_department_* ud on pu.id = ud.user_id
        join department_* d on ud.dept_id = d.id
        <where>
            <if test="username !=null and username != ''">
                and pu.username like concat('%',#{username},'%')
            </if>
            <if test="tenantId !=null and tenantId != ''">
                and put.tenant_id =  #{tenantId}
            </if>
                and pu.is_del = 0
        </where>
        group by pu.id, pu.create_time
        order by pu.create_time desc
    </select>
    <select id="pageMenu" resultType="com.yitai.vo.MenuVO">
        select m.id, m.menu_name,m.menu_type,m.menu_path,m.menu_router ,m.identify, m.menu_pid, m.sort_no
        from public_user u
                 join user_role_1 ur on u.id = ur.user_id
                 join role_1 r on ur.role_id= r.id
                 join role_menu_1 rm on r.id = rm.role_id
                 join public_menu m on rm.menu_id = m.id
        <where>
            and user_id = #{id}
            <if test="typeList !=null and typeList != ''">
                and m.menu_type in
                    <foreach collection="typeList" item="item"
                             open="(" close=")" separator=",">
                        #{item}
                    </foreach>
            </if>
            and m.is_del = 0
        </where>
    </select>

    <select id="pageAllMenu" resultType="com.yitai.vo.MenuVO">
        select *
        from public_menu
        <where>
            <if test="typeList !=null and typeList != ''">
                and menu_type in
                <foreach collection="typeList" item="item"
                         open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            and is_del = 0
        </where>
    </select>

    <select id="getTenant" resultType="com.yitai.entity.Tenant">
        select public_tenant.id, public_tenant.tenant_id, public_tenant.tenant_name
        from public_user_tenant
        join public_tenant on public_tenant.id = public_user_tenant.tenant_id
        <where>
            <if test="userId !=null and userId != ''">
                and public_user_tenant.user_id = #{userId}
            </if>
                and public_tenant.is_del = 0
        </where>
    </select>
</mapper>