<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC ".//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yitai.mapper.CategoryMapper">
    <resultMap id="BaseResultMap" type="com.yitai.core.entity.Category">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="sort_no" jdbcType="VARCHAR" property="sortNo"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="status" jdbcType="BIGINT" property="status"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
    </resultMap>
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into t_category_* (id, category_name, sort_no, pid, remark,
            status ,create_time,update_time,create_user,update_user,is_del)
        values (#{id}, #{categoryName}, #{sortNo}, #{pid}, #{remark}, #{status}, #{createTime}, #{upateTime}, #{createUser}, #{createUser}, #{isDel} )
    </insert>

    <select id="list" resultMap="BaseResultMap">
        select * from category_*
        <where>
            <if test="ids != null and ids.size() > 0 and id == null">
                id in
                <foreach collection="ids" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                and
            </if>
            <if test="categoryNames != null and categoryNames.size() > 0 ">
                category_name in
                <foreach collection="categoryNames" item="categoryName" open="(" close=")" separator=",">
                    #{categoryName}
                </foreach>
                and
            </if>

            <if test="createUser != null and createUser != '' ">
                create_user like concat('%',#{createUser}.'%') and
            </if>
            <if test="status != null">
                status = #{status} and
            </if>
            is_del = 0
        </where>
        order by update_time desc
    </select>

    <update id="update" >
        update category_* m
        <set>
            <if test="req.status != null">
                status = #{req.status},
            </if>
            <if test="req.updateBy != null">
                update_by = #{req.updateBy},
            </if>
            <if test="req.categoryId != null">
                category_id = #{req.categoryId},
            </if>
        </set>
        where m.id in
        <foreach collection="req.ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        and m.is_del = 0
    </update>

    <update id="removeByIds" >
        update category_* m set is_del = 1
        where m.id in
        <foreach collection="req.ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        and m.is_del = 0
    </update>

    <update id="deleteById" >
        update category_* m
        set is_del = 1
        where m.id = #{id}
          and m.is_del = 0
    </update>
</mapper>